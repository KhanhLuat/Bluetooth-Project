/********************************************************/
/* Customer			: Customer_XXXX						*/
/* Model(Thema No.)	: Model_XXXX						*/
/*------------------------------------------------------*/
/* CPU				: FR81S								*/
/* Date				: 16/08/18							*/
/*------------------------------------------------------*/
/* Programmed by	: (OFT)Sakata						*/
/* Copyrights Nippon Seiki Co.,Ltd						*/
/*------------------------------------------------------*/
/* update by		:									*/
/* date				:									*/
/********************************************************/
/********************************************************/
/* file DTO459_VDV_Sw_ctrl.h							*/
/* SW制御												*/
/********************************************************/
#ifndef	DTO459_VDV_SW_CTRL_H
#define	DTO459_VDV_SW_CTRL_H

/********************************************************/
/*	インクルードファイル								*/
/********************************************************/
#include "type.h"

/********************************************************/
/*	マクロ定義											*/
/********************************************************/
/* 
 ** SWモード状態
 */ 
typedef enum e_sw_mode_status
{
	SW_MODE_UNKNOWN = 0,				/**< SWモード:不明(初期値)		*/
	SW_MODE_OFF,						/**< SWモード:OFF				*/
	SW_MODE_AUTO,						/**< SWモード:オートREC			*/
	SW_MODE_MANUAL,						/**< SWモード:マニュアルREC		*/
	SW_MODE_UNCONNECT,					/**< SWモード:未接続			*/
	SW_MODE_INVALID,					/**< SWモード:無効				*/
	SW_MODE_NUM							/**< SWモード数					*/
} E_SW_MODE_STATUS;


/* 
 ** REC ボタン状態
 */ 
typedef enum e_sw_rec_btn_status
{
	SYS_REC_BTN_UNKNOWN = 0,			/**< RECボタン状態:未確定		*/
	SYS_REC_BTN_OFF,					/**< RECボタン状態:OFF			*/
	SYS_REC_BTN_ON_SHORTPRESS,			/**< RECボタン状態:ON（短押し）	*/
	SYS_REC_BTN_ON_LONGPRESS,			/**< RECボタン状態:ON（長押し）	*/
	SYS_REC_BTN_NUM						/**< RECボタン状態数			*/
} E_SW_REC_BTN_STATUS;


/********************************************************/
/*	内部変数定義										*/
/********************************************************/

/********************************************************/
/*	外部関数											*/
/********************************************************/

/********************************************************/
/* 関数名称		: Sw_control_Init						*/
/* 機能の説明	: Sw制御初期化							*/
/* 引数			: void									*/
/* 戻り値		: void									*/
/* 作成者		: (OFT)Sakata							*/
/* 作成日		: 16/08/18								*/
/* 備考			: 										*/
/********************************************************/
void Sw_control_Init(void);

/********************************************************/
/* 関数名称		: Sw_control_Main						*/
/* 機能の説明	: SW制御メイン							*/
/* 引数			: void									*/
/* 戻り値		: void									*/
/* 作成者		: (OFT)Sakata							*/
/* 作成日		: 16/08/18								*/
/* 備考			: 										*/
/********************************************************/
void Sw_control_Main(void);

/********************************************************/
/* 関数名称		: Sw_control_GetSwMode					*/
/* 機能の説明	: SWモード状態取得						*/
/* 引数			: void									*/
/* 戻り値		: SWモード状態 E_SW_MODE_STATUS			*/
/* 作成者		: (OFT)Sakata							*/
/* 作成日		: 16/08/18								*/
/* 備考			: 										*/
/********************************************************/
E_SW_MODE_STATUS Sw_control_GetSwMode(void);

/********************************************************/
/* 関数名称		: Sw_control_GetRecButtonStatus			*/
/* 機能の説明	: RECボタン状態取得						*/
/* 引数			: void									*/
/* 戻り値		: ボタン状態 E_SW_REC_BTN_STATUS		*/
/* 作成者		: (OFT)Sakata							*/
/* 作成日		: 16/08/18								*/
/* 備考			: 										*/
/********************************************************/
E_SW_REC_BTN_STATUS Sw_control_GetRecButtonStatus(void);

/********************************************************/
/* 関数名称		: Sw_control_GetRecButtonChangeCount	*/
/* 機能の説明	: RECボタン状態OnOff変化回数取得		*/
/* 引数			: void									*/
/* 戻り値		: 変化回数								*/
/* 作成者		: (OFT)Sakata							*/
/* 作成日		: 16/08/18								*/
/* 備考			: RECボタン状態(ON/OFF)変化回数			*/
/* 				: 長押しでは変化しない					*/
/********************************************************/
UI_8 Sw_control_GetRecButtonOnOffChangeCount(void);

/********************************************************/
/* 関数名称		: Sw_control_ReqInspection				*/
/* 機能の説明	: SW検査要求							*/
/* 引数			: void									*/
/* 戻り値		: 正常	:N_OK							*/
/*				  異常	:N_NG							*/
/* 作成者		: (OFT)Toguchi							*/
/* 作成日		: 17/01/20								*/
/* 備考			: 本関数が正常終了した場合、検査制御モジュールに対して	*/
/*				   Insp_notify_inspection_resultにより検査結果を通知する*/
/********************************************************/
SI_8 Sw_control_ReqInspection(void);

#endif	/*DTO459_VDV_SW_CTRL_H*/
